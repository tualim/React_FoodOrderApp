{"ast":null,"code":"var _jsxFileName = \"/Users/Tualim_1/Documents/react/food-order/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      item: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.id);\n    const existingItem = state.item[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","updatedTotalAmount","filter","CartProvider","props","_s","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Tualim_1/Documents/react/food-order/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updateTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      item: updatedItems,\n      totalAmount: updateTotalAmount,\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.item.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.item[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if(existingItem.amount === 1) {\n        updatedItems = state.items.filter(item => item.id !== action.id)\n    }else{\n        const updatedItem = { ...existingItem, amount: existingItem.amount - 1 }\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemHandler = (item) => {\n    dispatchCartAction({ type: \"ADD_ITEM\", item: item });\n  };\n\n  const removeItemHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}